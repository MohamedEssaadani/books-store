{"version":3,"sources":["components/Sidebar.js","components/books/BooksList.js","components/authors/AuthorsList.js","components/categories/CategoriesList.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Sidebar","className","id","icon","faBook","Dropdown","Toggle","Menu","to","Item","faPlus","faList","faUsers","BooksList","props","state","books","loading","this","populateBooks","contents","renderBooksTable","a","axios","get","response","data","setState","Table","warn","striped","hover","bordered","responsive","map","book","bookId","bookName","moment","Date","releaseDate","format","price","faEye","faEdit","Component","displayName","name","AuthorsList","authors","populateAuthors","renderAuthorsTable","author","authorId","authorName","CategoriesList","categories","populateCategories","renderCategoriesTable","category","categoryId","categoryName","App","style","backgroundColor","color","faUser","faSignOutAlt","path","exact","component","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.02609891.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {Dropdown} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faBook,\r\n    faChartArea,\r\n    faList,\r\n    faPlus, faTabletAlt,\r\n    faUser,\r\n    faUsers\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport function Sidebar() {\r\n    return (\r\n        <>\r\n            <ul\r\n                className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"\r\n                id=\"accordionSidebar\"\r\n            >\r\n                <a className=\"sidebar-brand d-flex align-items-center justify-content-center\">\r\n                    <div className=\"sidebar-brand-icon rotate-n-15\">\r\n                        <FontAwesomeIcon icon={faBook}/>\r\n                    </div>\r\n                    <div className=\"sidebar-brand-text mx-3\">Books Store</div>\r\n                </a>\r\n\r\n                <hr className=\"sidebar-divider\"/>\r\n\r\n                <div className=\"sidebar-heading\">Books Management</div>\r\n\r\n                <Dropdown className=\"nav-item\">\r\n                    <Dropdown.Toggle className=\"nav-link myDrop\">\r\n                        <FontAwesomeIcon icon={faBook} />\r\n                        {\" \"}Books\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <LinkContainer to={\"/admin/books\"}>\r\n                            <Dropdown.Item>\r\n                                <FontAwesomeIcon icon={faBook} />\r\n                                {\" \"}<span>Books</span>\r\n                            </Dropdown.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer to={\"/admin/new-customer\"}>\r\n                            <Dropdown.Item>\r\n                                <FontAwesomeIcon icon={faPlus}/>\r\n                                {\" \"}<span>New Book</span>\r\n                            </Dropdown.Item>\r\n                        </LinkContainer>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                <hr className=\"sidebar-divider\"/>\r\n\r\n                <div className=\"sidebar-heading\">Categories Management</div>\r\n                <Dropdown className=\"nav-item\">\r\n                    <Dropdown.Toggle className=\"nav-link myDrop\">\r\n                        <FontAwesomeIcon icon={faList}/>\r\n                        {\" \"}Categories\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <LinkContainer to={\"/admin/categories\"}>\r\n                            <Dropdown.Item>\r\n                                <FontAwesomeIcon icon={faList} />\r\n                                {\" \"}<span>Categories</span>\r\n                            </Dropdown.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer to={\"/admin/new-account\"}>\r\n                            <Dropdown.Item>\r\n                                <FontAwesomeIcon icon={faPlus}/>\r\n                                {\" \"}<span>New Category</span>\r\n                            </Dropdown.Item>\r\n                        </LinkContainer>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                <div className=\"sidebar-heading\">Authors Management</div>\r\n                <Dropdown className=\"nav-item\">\r\n                    <Dropdown.Toggle className=\"nav-link myDrop\">\r\n                        <FontAwesomeIcon icon={faUsers} />\r\n                        {\" \"}Authors\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <LinkContainer to={\"/admin/authors\"}>\r\n                            <Dropdown.Item>\r\n                                <FontAwesomeIcon icon={faUsers} />\r\n                                {\" \"}<span>Authors</span>\r\n                            </Dropdown.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer to={\"/admin/new-account\"}>\r\n                            <Dropdown.Item>\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                                {\" \"}<span>New Author</span>\r\n                            </Dropdown.Item>\r\n                        </LinkContainer>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </ul>\r\n        </>\r\n    )\r\n        ;\r\n}","import React, { Component } from 'react';\r\nimport axios from \"axios\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBook, faEdit, faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport { Table } from \"react-bootstrap\";\r\nimport * as moment from 'moment'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class BooksList extends Component {\r\n    static displayName = BooksList.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { books: [], loading: true };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateBooks();\r\n    }\r\n\r\n    static renderBooksTable(books) {\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-10 m-5\">\r\n                                    <div className=\"d-sm-flex align-items-center justify-content-center mb-4\">\r\n                                        <h1 className=\"h3 mb-0 text-gray-800 float-left\">\r\n                                            {\" \"}\r\n                                            <FontAwesomeIcon icon={faBook}/> Books List\r\n                                        </h1>\r\n                               \r\n                                    </div>\r\n                                    <Table warn className=\"table-sm\" striped hover bordered responsive>\r\n                                        <thead>\r\n                                            <th>#ID</th>\r\n                                            <th>Book Name</th>\r\n                                            <th>Release Date</th>\r\n                                            <th>Price</th>\r\n                                            <th>\r\n                                             \r\n                                            </th>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                books.map(book => {\r\n                                                    return (\r\n                                                        <tr key={book.bookId}>\r\n                                                            <td>{book.bookId}</td>\r\n                                                            <td>{book.bookName}</td>\r\n                                                            <td>{moment(new Date(book.releaseDate)).format(\"DD/MM/YYYY\")}</td>\r\n                                                            <td>{book.price} $</td>\r\n                                                            <td>\r\n                                                                <Link to={`/admin/books/${book.bookId}/detail`}\r\n                                                                    className=\"btn btn-primary\">\r\n                                                                    <FontAwesomeIcon icon={faEye} />\r\n                                                                </Link>{\" \"}\r\n                                                                <Link to={`/admin/books/${book.bookId}/edit`}\r\n                                                                    className=\"btn btn-success\">\r\n                                                                    <FontAwesomeIcon icon={faEdit} />\r\n                                                                </Link>\r\n                                                             \r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let contents = this.state.loading\r\n            ? <p><em>Loading...</em></p>\r\n            : BooksList.renderBooksTable(this.state.books);\r\n\r\n        return (\r\n            <div>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async populateBooks() {\r\n        const response = await axios.get('/books');\r\n        const { data } = await response;\r\n        this.setState({ books: data, loading: false });\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBook, faEdit, faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport { Table } from \"react-bootstrap\";\r\nimport * as moment from 'moment'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class AuthorsList extends Component {\r\n    static displayName = AuthorsList.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { authors: [], loading: true };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateAuthors();\r\n    }\r\n\r\n    static renderAuthorsTable(authors) {\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-10 m-5\">\r\n                                    <div className=\"d-sm-flex align-items-center justify-content-center mb-4\">\r\n                                        <h1 className=\"h3 mb-0 text-gray-800 float-left\">\r\n                                            {\" \"}\r\n                                            <FontAwesomeIcon icon={faBook} /> Authors List\r\n                                        </h1>\r\n\r\n                                    </div>\r\n                                    <Table warn className=\"table-sm\" striped hover bordered responsive>\r\n                                        <thead>\r\n                                            <th>#ID</th>\r\n                                            <th>Author Name</th>\r\n                                            <th>\r\n\r\n                                            </th>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                authors.map(author => {\r\n                                                    return (\r\n                                                        <tr key={author.authorId}>\r\n                                                            <td>{author.authorId}</td>\r\n                                                            <td>{author.authorName}</td>\r\n                                                            <td>\r\n                                                                <Link to={`/admin/authors/${author.authorId}/detail`}\r\n                                                                    className=\"btn btn-primary\">\r\n                                                                    <FontAwesomeIcon icon={faEye} />\r\n                                                                </Link>{\" \"}\r\n                                                                <Link to={`/admin/authors/${author.authorId}/edit`}\r\n                                                                    className=\"btn btn-success\">\r\n                                                                    <FontAwesomeIcon icon={faEdit} />\r\n                                                                </Link>\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let contents = this.state.loading\r\n            ? <p><em>Loading...</em></p>\r\n            : AuthorsList.renderAuthorsTable(this.state.authors);\r\n\r\n        return (\r\n            <div>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async populateAuthors() {\r\n        const response = await axios.get('/api/authors');\r\n        const { data } = await response;\r\n        this.setState({ authors: data, loading: false });\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBook, faEdit, faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport { Table } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class CategoriesList extends Component {\r\n    static displayName = CategoriesList.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { categories: [], loading: true };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateCategories();\r\n    }\r\n\r\n    static renderCategoriesTable(categories) {\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                        <div className=\"card-body p-0\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-10 m-5\">\r\n                                    <div className=\"d-sm-flex align-items-center justify-content-center mb-4\">\r\n                                        <h1 className=\"h3 mb-0 text-gray-800 float-left\">\r\n                                            {\" \"}\r\n                                            <FontAwesomeIcon icon={faBook} /> Categories List\r\n                                        </h1>\r\n\r\n                                    </div>\r\n                                    <Table warn className=\"table-sm\" striped hover bordered responsive>\r\n                                        <thead>\r\n                                            <th>#ID</th>\r\n                                            <th>Category Name</th>\r\n                                            <th>\r\n\r\n                                            </th>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                categories.map(category => {\r\n                                                    return (\r\n                                                        <tr key={category.categoryId}>\r\n                                                            <td>{category.categoryId}</td>\r\n                                                            <td>{category.categoryName}</td>\r\n                                                            <td>\r\n                                                                <Link to={`/admin/categories/${category.categoryId}/detail`}\r\n                                                                    className=\"btn btn-primary\">\r\n                                                                    <FontAwesomeIcon icon={faEye} />\r\n                                                                </Link>{\" \"}\r\n                                                                <Link to={`/admin/categories/${category.categoryId}/edit`}\r\n                                                                    className=\"btn btn-success\">\r\n                                                                    <FontAwesomeIcon icon={faEdit} />\r\n                                                                </Link>\r\n\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let contents = this.state.loading\r\n            ? <p><em>Loading...</em></p>\r\n            : CategoriesList.renderCategoriesTable(this.state.categories);\r\n\r\n        return (\r\n            <div>\r\n                {contents}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async populateCategories() {\r\n        const response = await axios.get('/api/categories');\r\n        const { data } = await response;\r\n        this.setState({ categories: data, loading: false });\r\n    }\r\n}\r\n","import {Sidebar} from \"./components/Sidebar\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport {Dropdown} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faSignOutAlt, faUser, faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport BooksList from \"./components/books/BooksList\";\nimport AuthorsList from \"./components/authors/AuthorsList\";\nimport CategoriesList from \"./components/categories/CategoriesList\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <div id=\"wrapper\">\n                    <Sidebar/>\n                    <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n                        <div id=\"content\">\n                            <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n                                <button\n                                    id=\"sidebarToggleTop\"\n                                    className=\"btn btn-link d-md-none rounded-circle mr-3\"\n                                >\n                                    <i className=\"fa fa-bars\"></i>\n                                </button>\n\n                                <ul className=\"navbar-nav ml-auto\">\n                                    <li className=\"d-inline-block ml-auto ml-md-3 my-2 my-md-0 mw-100 pt-2\">\n                                        <Dropdown className=\"nav-item\">\n                                            <Dropdown.Toggle className=\"btn btn-default\"\n                                                             style={{backgroundColor: \"white\", color: \"black\"}}>\n                                                <FontAwesomeIcon icon={faUser}/>\n                                                {\" ES-SAADANI Mohamed\"}\n                                            </Dropdown.Toggle>\n\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item\n                                                >\n                                                    <FontAwesomeIcon icon={faUser}/>\n                                                    {\" \"}<span> Profil</span>\n                                                </Dropdown.Item>\n                                                <Dropdown.Item >\n                                                    <FontAwesomeIcon icon={faSignOutAlt}/>\n                                                    {\" \"}<span> Déconnecter</span>\n                                                </Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n\n                                    </li>\n                                </ul>\n                            </nav>\n                            <Switch>\n                                <Route path=\"/\" exact component={BooksList} />\n                                <Route path=\"/admin/books\" exact component={BooksList} />\n                                <Route path=\"/admin/authors\" exact component={AuthorsList} />\n                                <Route path=\"/admin/categories\" exact component={CategoriesList} />\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </Router>\n        </div>\n    )\n        ;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport \"./sb-admin-2.css\";\r\nimport './index.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}